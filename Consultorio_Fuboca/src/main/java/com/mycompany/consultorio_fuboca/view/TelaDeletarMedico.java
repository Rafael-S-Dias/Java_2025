/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.consultorio_fuboca.view;

import com.mycompany.consultorio_fuboca.controle.MedicoControle;
import com.mycompany.consultorio_fuboca.modelo.Medico;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samsung
 */
public class TelaDeletarMedico extends javax.swing.JInternalFrame {

    private MedicoControle controle = new MedicoControle();
    private DefaultTableModel modeloTabela;
    private int idSelecionado = -1;
    private boolean modoAtualizacao = false;
    /**
     * Creates new form TelaDeletarMedico
     */
    public TelaDeletarMedico() {
        initComponents();
        
        modeloTabela = (DefaultTableModel) tbLista.getModel();
        atualizarTabela();
        modeloTabela = (DefaultTableModel) tbLista.getModel();
        
        tbLista.getSelectionModel().addListSelectionListener(e -> {
            int linhaSelecionada = tbLista.getSelectedRow();
            
            if (linhaSelecionada != -1) {
                String id = modeloTabela.getValueAt(linhaSelecionada, 0).toString();
                String crm = modeloTabela.getValueAt(linhaSelecionada, 1).toString();
                String nome = modeloTabela.getValueAt(linhaSelecionada, 2).toString();
                String sobrenome = modeloTabela.getValueAt(linhaSelecionada, 3).toString();
        }
        });
        txtId.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                filtrarTabela();
            }
        });
    }

    private void atualizarTabela() {
        modeloTabela.setRowCount(0); // Limpa
        for (Medico m : controle.listar()) {
            modeloTabela.addRow(new Object[]{m.getIdMedico(), m.getCrm(), m.getPrimeiroNomeMedico(), m.getNomeDoMeioMedico() + " " + m.getUltimoNomeMedico()});

        }
    }

    private void filtrarTabela() {
        // Movido para o botão buscar para testes
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnDeletar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLista = new javax.swing.JTable();
        btnConsultar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("DIGITE O ID DO MEDICO QUE DESEJA DELETAR: ");

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        btnDeletar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDeletar.setText("DELETAR");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLimpar.setText("LIMPAR");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        tbLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "CRM", "Nome", "Sobrenome"
            }
        ));
        jScrollPane1.setViewportView(tbLista);

        btnConsultar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnConsultar.setText("CONSULTAR");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnLimpar)
                            .addGap(135, 135, 135)
                            .addComponent(btnDeletar))))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConsultar)
                .addGap(122, 122, 122))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpar)
                    .addComponent(btnDeletar))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        txtId.setText("");
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
        String termo = txtId.getText().trim().toLowerCase();
        modeloTabela.setRowCount(0);

        ArrayList<Medico> listaMedico = controle.listar();

        for (Medico m : listaMedico) {
            if (m.getCrm().toLowerCase().contains(termo)) {
                modeloTabela.addRow(new Object[]{m.getIdMedico(), m.getCrm(), m.getPrimeiroNomeMedico(), m.getNomeDoMeioMedico() + " " + m.getUltimoNomeMedico()});
            }
        }

        if (termo.isEmpty()) {
            atualizarTabela();
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        // TODO add your handling code here:
        int linha = tbLista.getSelectedRow();

        //CASO NÃO SELECIONE A LINHA 
        if (linha == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma medico para remover.");
            return;

        }

        ArrayList<Medico> listaMedico = controle.listar();
        listaMedico.remove(linha);
        atualizarTabela();
        txtId.setText("");
        JOptionPane.showMessageDialog(null, "Medico removido com sucesso");
    }//GEN-LAST:event_btnDeletarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbLista;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

}